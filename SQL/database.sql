CREATE DATABASE CAJERO;
USE CAJERO;

CREATE TABLE IF NOT EXISTS USUARIOS(
	ID				INTEGER AUTO_INCREMENT,
    NOMBRE			VARCHAR(100),
    APELLIDOS		VARCHAR(155),
    CLAVE			VARCHAR(255),
    COD_CUENTA      VARCHAR(8),
    
    PRIMARY KEY(ID),
    UNIQUE KEY(COD_CUENTA)
);


CREATE TABLE IF NOT EXISTS OPERACIONES(
	ID_OPERACION	INTEGER AUTO_INCREMENT,
    ID_USUARIO		INTEGER,
    FECHA			DATE,
    IMPORTE			DOUBLE,
    TIPO_OPERACION	VARCHAR(7),
    
    PRIMARY KEY(ID_OPERACION),
    FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID)
);

/*.----------------------- VALORES POR DEFECTO
INSERT INTO USUARIOS(NOMBRE, APELLIDOS, CLAVE) VALUES
("Sergio", "Diez", "1234"),
("Antonio", "Manchado", "1234"),
("Luisa", "Paytas", "1234");

INSERT INTO OPERACIONES(ID_USUARIO, IMPORTE, TIPO_OPERACION) VALUES
(1, 50, "ENTRADA"),
(1, 40, "SALIDA"),
(2, 100, "ENTRADA"),
(2, 80, "SALIDA"),
(3, 120, "ENTRADA"),
(3, 90, "SALIDA");

SELECT * FROM USUARIOS 
INNER JOIN OPERACIONES ON USUARIOS.ID = OPERACIONES.ID_USUARIO;
*/


/*.---------------------------------------------------.FUNCIONES.------------------------------------------------------------------.*/

/*.--------------.calcular_saldo(cod_usu int)
CREATE DEFINER=`root`@`localhost` FUNCTION `calcular_saldo`(COD_USU INTEGER) RETURNS double
BEGIN
	DECLARE MAX_REG INTEGER;
    DECLARE REG INTEGER;
    DECLARE SALDO DOUBLE;
    DECLARE IMPOR DOUBLE;
    DECLARE TIPO_OP VARCHAR(7);
    
    SET MAX_REG = (SELECT MAX(ID_OPERACION) FROM OPERACIONES);
    SET REG = 1;
    SET SALDO = 0.0;

    WHILE REG <= MAX_REG DO
		IF COD_USU = (SELECT ID_USUARIO FROM OPERACIONES WHERE ID_OPERACION = REG) THEN
			SET IMPOR = (SELECT IMPORTE FROM OPERACIONES WHERE ID_OPERACION = REG);
            SET TIPO_OP = (SELECT TIPO_OPERACION FROM OPERACIONES WHERE ID_OPERACION = REG);
            IF TIPO_OP = "ENTRADA" THEN
				SET SALDO = SALDO + IMPOR;
            ELSEIF TIPO_OP = "SALIDA" THEN
				SET SALDO = SALDO - IMPOR;
            END IF;
        END IF;
		SET REG = REG + 1;
    END WHILE;

    RETURN SALDO;
END
*/